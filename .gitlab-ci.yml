stages:
  - test
  - play-test
  - build
  - deploy

unit-test:
  script:
    - "/Applications/Unity/Hub/Editor/2020.1.3f1/Unity.app/Contents/MacOS/Unity \
    -batchmode \
    -projectPath=./Parlay \
    -runTests -testPlatform editmode \
    -logFile \
    -testResults ./edit-unit-tests.xml"
    - "/Applications/Unity/Hub/Editor/2020.1.3f1/Unity.app/Contents/MacOS/Unity \
    -batchmode \
    -projectPath=./Parlay \
    -runTests -testPlatform playmode \
    -logFile \
    -testResults ./play-unit-tests.xml"
  stage: test
  tags:
    - unity

build-webgl:
  script:
    - "/Applications/Unity/Hub/Editor/2020.1.3f1/Unity.app/Contents/MacOS/Unity \
    -quit -batchmode -projectPath ./Parlay -executeMethod WebGLBuilder.build -buildTarget WebGL"
    - "ls -a $(pwd)/Parlay"
  stage: build
  artifacts:
    paths:
      - Parlay/WebGL-Dist/
  tags:
    - unity

deploy-to-stage:
  image: "python:latest"
  stage: deploy
  environment:
    name: stage
  needs:
    - job: build-webgl
      artifacts: true
  variables:
    AWS_ACCESS_KEY_ID: "$AWS_KEY_ID"
    AWS_SECRET_ACCESS_KEY: "$AWS_KEY_SECRET"
  before_script:
    - pip install awscli
  script:
    - aws s3 cp ./Parlay/WebGL-Dist s3://parlay-island-game-stage --recursive --include "*" --metadata commit-hash=${CI_COMMIT_SHORT_SHA}
  only:
    - master
  tags:
    - unity

deploy-to-prod:
  image: "python:latest"
  stage: deploy
  when: manual
  environment:
    name: prod
  needs:
    - job: build-webgl
      artifacts: true
  variables:
    AWS_ACCESS_KEY_ID: "$AWS_KEY_ID"
    AWS_SECRET_ACCESS_KEY: "$AWS_KEY_SECRET"
  before_script:
    - pip install awscli
  script:
    - aws s3 cp ./Parlay/WebGL-Dist s3://parlay-island-game-prod --recursive --include "*" --metadata commit-hash=${CI_COMMIT_SHORT_SHA}
  tags:
    - unity
